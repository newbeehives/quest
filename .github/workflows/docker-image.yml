name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      AWS_REGION: us-east-1
      AWS_REARC_QUEST_ECR_REPONAME: binu-rearc-quest
      AWS_REARC_QUEST_S3_BUCKET: binu-rearc-quest-terraform-01
    outputs:
      image_tag: ${{ steps.docker.outputs.image_tag }}      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: $AWS_REGION
        
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1    

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      
      - name: Build App
        run: npm install
        
      - name: Create the Rearc Quest ECR Repo, if not exists
        run: |
          #aws ecr describe-repositories --repository-names ${{ secrets.AWS_REARC_QUEST_ECR_REPONAME }} || aws ecr create-repository --repository-name ${{ secrets.AWS_REARC_QUEST_ECR_REPONAME }}
          aws ecr create-repository --repository-name $AWS_REARC_QUEST_ECR_REPONAME || true

      - name: Create the Rearc Quest S3 bucket for terraform state, if not exists
        run: |
          aws s3api create-bucket --bucket $AWS_REARC_QUEST_S3_BUCKET --region ${{ secrets.AWS_REGION }} || true

      - name: Build, tag, and push image to Amazon ECR
        id: docker
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: $AWS_REARC_QUEST_ECR_REPONAME
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image_tag::$IMAGE_TAG"

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      AWS_REARC_QUEST_ECR_REPONAME: binu-rearc-quest
      AWS_REARC_QUEST_S3_BUCKET: binu-rearc-quest-terraform-01
    outputs:
      url: ${{ steps.terraform.outputs.url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2      
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.4
          terraform_wrapper: false

      - name: Terraform Deploy
        id: terraform
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: binu-rearc-quest
          IMAGE_TAG: ${{ needs.build.outputs.image_tag }}
        run: |
          cd terraform
          terraform init -backend-config="bucket=binu-rearc-quest-terraform-01" -backend-config="key=binu-rearc-quest/${{ env.ENV_NAME }}.tfstate" -backend-config="region=us-east-1"
          terraform apply -auto-approve
          terraform output rearc_quest_box_ip
          echo QUEST_BOX_IP=$(terraform output -raw rearc_quest_box_ip) >> $GITHUB_ENV
          echo QUEST_BOX_IP=${{ env.QUEST_BOX_IP }}
          
      - name: executing remote ssh commands using ssh key
        id: remote-ssh
        uses: appleboy/ssh-action@master
        env: 
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        with:
          host: ${{ env.QUEST_BOX_IP }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY_PEM }}
          port: 22
          envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_DEFAULT_REGION
          script: | 
            whoami
            sudo -s 
            whoami
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws configure set default.region ${{ secrets.AWS_REGION }}
            aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 803943555226.dkr.ecr.us-east-1.amazonaws.com
            sudo docker pull 803943555226.dkr.ecr.us-east-1.amazonaws.com/binu-rearc-quest:latest            
          
